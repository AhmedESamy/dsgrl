Automatically selected device: gpu 1
Initializing model ...
======================Before Self-Supervised Training=============================

Training a linear classifier for split 1:  93%|███████████████████████████████████████████████████████▊    | 465/500 [00:03<00:00, 135.36it/s]
Split 001/001. Training f1micro: 0.8250 f1macro: 0.8244 validation f1micro: 0.4719 f1macro: 0.4013 test f1micro: 0.4719 f1macro: 0.4013
==========================Self-Supervised Training================================
Training a linear classifier for split 1: 100%|████████████████████████████████████████████████████████████| 500/500 [00:03<00:00, 135.33it/s]

Training a linear classifier for split 1:  91%|███████████████████████████████████████████████████████▍     | 454/500 [00:05<00:00, 87.11it/s]
Traceback (most recent call last):
  File "/home/zekarias/workspace/projects/dsgrl/node_classification/main.py", line 43, in <module>
    main()
  File "/home/zekarias/workspace/projects/dsgrl/node_classification/main.py", line 28, in main
    exp.run()
  File "/home/zekarias/workspace/projects/dsgrl/node_classification/experiment.py", line 150, in run
    val_score = self.eval_model(test=True)
  File "/home/zekarias/workspace/projects/dsgrl/node_classification/experiment.py", line 246, in eval_model
    val_scores, test_scores = evaluator.execute(
  File "/home/zekarias/workspace/projects/dsgrl/node_classification/experiment.py", line 353, in execute
    train_score = self.score(scores=logits, truth=y[train_mask].squeeze())
  File "/home/zekarias/workspace/projects/dsgrl/node_classification/experiment.py", line 302, in score
    score_dict["f1micro"] = f1_score(truth, prediction, average="micro")
  File "/home/zekarias/.envs/torch/lib/python3.9/site-packages/sklearn/metrics/_classification.py", line 1123, in f1_score
    return fbeta_score(
  File "/home/zekarias/.envs/torch/lib/python3.9/site-packages/sklearn/metrics/_classification.py", line 1261, in fbeta_score
    _, _, f, _ = precision_recall_fscore_support(
  File "/home/zekarias/.envs/torch/lib/python3.9/site-packages/sklearn/metrics/_classification.py", line 1548, in precision_recall_fscore_support
    MCM = multilabel_confusion_matrix(
  File "/home/zekarias/.envs/torch/lib/python3.9/site-packages/sklearn/metrics/_classification.py", line 479, in multilabel_confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/home/zekarias/.envs/torch/lib/python3.9/site-packages/sklearn/metrics/_classification.py", line 108, in _check_targets
    y_pred = column_or_1d(y_pred)
KeyboardInterrupt